{"version":3,"sources":["recoil/state.js","components/Beat.js","components/Controller.js","audioFiles/future_funk_beats_25.mp3","audioFiles/120_stutter_breakbeats_16.mp3","audioFiles/Bass Warwick heavy funk groove on E 120 BPM.mp3","audioFiles/electric guitar coutry slide 120bpm - B.mp3","audioFiles/FUD_120_StompySlosh.mp3","audioFiles/GrooveB_120bpm_Tanggu.mp3","audioFiles/MazePolitics_120_Perc.mp3","audioFiles/PAS3GROOVE1.03B.mp3","audioFiles/SilentStar_120_Em_OrganSynth.mp3","components/LoopMachine.js","components/general/Header.js","App.js","index.js"],"names":["loopStartState","atom","key","default","playAllState","playRecordState","recordState","recordObjectState","startTimeState","endTimeState","Beat","beat","index","recordObject","audio","icon","useState","beatState","setBeatState","beatStateCheck","setBeatStateCheck","useRecoilState","startTime","setStartTime","endTime","useRecoilValue","setRecordObject","useSetRecoilState","loopStart","playAll","record","playRecord","setPlayRecord","audioRef","useRef","beatRef","useEffect","a","timeDelyed","Number","Date","prev","time","type","setTimeout","current","play","pause","currentTime","filter","forEach","clickBeatHandle","useCallback","style","boxShadow","backgroundColor","className","ref","onClick","src","loop","Controller","setPlayAll","setLoopStart","setEndTime","setRecord","length","beats","futureFunk","stutterBreak","bassFunk","electricGuitar","stompySlosh","grooveTango","mazePolitics","pasGroove","silentStar","LoopMachine","map","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03fc00eb.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nexport const widthState = atom({\r\n    key: 'widthState',\r\n    default: false,\r\n});\r\n\r\nexport const loopStartState = atom({\r\n    key: 'loopStartState',\r\n    default: false,\r\n});\r\n\r\nexport const playAllState = atom({\r\n    key: 'playAllState',\r\n    default: false,\r\n});\r\n\r\nexport const playRecordState = atom({\r\n    key: 'playRecordState',\r\n    default: false,\r\n});\r\n\r\nexport const recordState = atom({\r\n    key: 'recordState',\r\n    default: false,\r\n});\r\n\r\nexport const recordObjectState = atom({\r\n    key: 'recordObjectState',\r\n    default: [],\r\n});\r\n\r\nexport const startTimeState = atom({\r\n    key: 'startTimeState',\r\n    default: null,\r\n});\r\n\r\nexport const endTimeState = atom({\r\n    key: 'endTimeState',\r\n    default: null,\r\n});","import { useRef, useState, useEffect, useCallback } from 'react';\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { startTimeState, endTimeState, playAllState, recordState, recordObjectState, loopStartState, playRecordState } from '../recoil/state';\r\n\r\n// style \r\nimport './style/Beat.css';\r\n\r\nfunction Beat({ beat, index, recordObject }) {\r\n\r\n    const { audio, icon } = beat;\r\n\r\n    const [beatState, setBeatState] = useState(false);\r\n    const [beatStateCheck, setBeatStateCheck] = useState(false);\r\n\r\n    const [startTime, setStartTime] = useRecoilState(startTimeState);\r\n    const endTime = useRecoilValue(endTimeState);\r\n    const setRecordObject = useSetRecoilState(recordObjectState);\r\n\r\n    const loopStart = useRecoilValue(loopStartState);\r\n    const playAll = useRecoilValue(playAllState);\r\n    const record = useRecoilValue(recordState);\r\n    const [playRecord, setPlayRecord] = useRecoilState(playRecordState);\r\n\r\n    const audioRef = useRef(null);\r\n    const beatRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (loopStart || record || playRecord) {\r\n                if (beatState) {\r\n                    if (!startTime || startTime === 0) {\r\n                        audioRef.current.play();\r\n                        setStartTime(Number(new Date()));\r\n                        record && setRecordObject([{ time: 0, index: index, type: \"start\" }])\r\n                    } else {\r\n                        const timeDelyed = 8000 - ((Number(new Date()) - startTime) % 8000);\r\n                        setBeatStateCheck(\"on\")\r\n                        record && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"check\" }])\r\n                        setTimeout(() => {\r\n                            setBeatStateCheck(true);\r\n                        }, timeDelyed);\r\n                    }\r\n                } else {\r\n                    record && startTime && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"pause\" }])\r\n                    audioRef.current.pause();\r\n                }\r\n            } else { // restart\r\n                setStartTime(null);\r\n                setBeatState(false)\r\n                setBeatStateCheck(false)\r\n                audioRef.current.pause();\r\n                audioRef.current.currentTime = 0;\r\n            }\r\n        })()\r\n    }, [beatState, loopStart, record, playRecord])\r\n\r\n    useEffect(() => {\r\n        // check if beat button still clicked\r\n        if (beatStateCheck === true && beatState) {\r\n            audioRef.current.play();\r\n            record && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"play\" }])\r\n        }\r\n    }, [beatStateCheck])\r\n\r\n    useEffect(() => {\r\n        if (playAll) {\r\n            audioRef.current.play()\r\n        } else if (playRecord) {\r\n            setStartTime(0);\r\n            setTimeout(() => {\r\n                setPlayRecord(false);\r\n            }, endTime);\r\n        } else if (!playRecord) {\r\n            setBeatState(false);\r\n            audioRef.current.pause();\r\n            audioRef.current.currentTime = 0;\r\n        }\r\n    }, [playAll, playRecord])\r\n\r\n\r\n    useEffect(() => {\r\n        if (startTime === 0) {\r\n            const recordToPlay = recordObject.filter(record => record.index === index); // filter only relevant records\r\n            recordToPlay.forEach((record) => {\r\n                if (record.index === index) {\r\n                    if (record.type === \"start\") {\r\n                        setBeatState(true)\r\n                    } else if (record.type === \"check\") {\r\n                        setTimeout(() => {\r\n                            setBeatState(true)\r\n                        }, record.time)\r\n                    } else if (record.type === \"pause\") {\r\n                        setTimeout(() => {\r\n                            setBeatState(false)\r\n                        }, record.time)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }, [startTime])\r\n\r\n    const clickBeatHandle = useCallback(() => {\r\n        if (!playAll && (loopStart || record)) {\r\n            setBeatState(prev => !prev)\r\n        }\r\n    }, [playAll, loopStart, record])\r\n\r\n    if (beatRef.current) {\r\n        beatRef.current.style.boxShadow = beatStateCheck === \"on\" ? \"0 0 10px 10px #eff, 0 0 15px 15px yellow\" : ((beatState && (loopStart || record || playRecord)) || playAll) ? \"0 0 10px 10px #eff, 0 0 15px 15px green\" : \"0 0 10px 10px #eff, 0 0 12px 12px #0ff\"\r\n        beatRef.current.style.backgroundColor = ((beatState && (loopStart || record || playRecord)) || playAll) ? \"#777\" : \"#444\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"beat\"\r\n            ref={beatRef}\r\n        >\r\n            <div className=\"miniBeatStyle\" onClick={clickBeatHandle}>\r\n                <audio ref={audioRef} src={audio} loop={true} />\r\n                {icon}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beat","import { FaStopCircle, FaRecordVinyl } from \"react-icons/fa\";\r\nimport { BiPlayCircle, BiStopCircle } from \"react-icons/bi\";\r\nimport { TiThSmallOutline } from \"react-icons/ti\";\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\n\r\n// recoil\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from 'recoil';\r\nimport { playAllState, recordState, recordObjectState, loopStartState, playRecordState, startTimeState, endTimeState } from '../recoil/state';\r\n\r\n// style \r\nimport './style/Controller.css';\r\n\r\nfunction Controller({ setRecordObject }) {\r\n\r\n    const [playAll, setPlayAll] = useRecoilState(playAllState);\r\n    const [loopStart, setLoopStart] = useRecoilState(loopStartState);\r\n    const startTime = useRecoilValue(startTimeState);\r\n    const setEndTime = useSetRecoilState(endTimeState);\r\n    const [playRecord, setPlayRecord] = useRecoilState(playRecordState);\r\n    const [record, setRecord] = useRecoilState(recordState);\r\n    const recordObject = useRecoilValue(recordObjectState);\r\n\r\n    const loopStarter = () => {\r\n        !record && !playAll && !playRecord && setLoopStart(prev => !prev)\r\n    }\r\n\r\n    const playAller = () => {\r\n        !loopStart && !record && !playRecord && setPlayAll(prev => !prev)\r\n    }\r\n\r\n    const recorder = () => {\r\n        !loopStart && !playAll && !playRecord && setRecord(prev => !prev);\r\n        record && setEndTime(new Date() - startTime);\r\n    }\r\n\r\n    const playRecorder = () => {\r\n        setRecordObject(recordObject);\r\n        setPlayRecord(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"controllerStyle\">\r\n            <div className={(!playAll && !record && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={loopStarter}>\r\n                {!loopStart && <FaPowerOff className=\"iconStyle\" />}\r\n                {(loopStart && !playAll && !record) && <FaStopCircle className=\"iconStyle\" />}\r\n            </div>\r\n            <div className={(!loopStart && !record && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={playAller}>\r\n                {!playAll && <TiThSmallOutline className=\"iconStyle\" />}\r\n                {(playAll && !loopStart && !record) && <FaStopCircle className=\"iconStyle\" />}\r\n            </div>\r\n            <div className={record ? \"iconsDivRecordStyle\" : (!loopStart && !playAll && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={recorder}>\r\n                <FaRecordVinyl className=\"iconStyle\" />\r\n            </div>\r\n            <div className={(!playAll && !loopStart && !record && recordObject.length > 0) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"}>\r\n                {playRecord ? <BiStopCircle className=\"iconStyle\" onClick={() => setPlayRecord(false)} /> : <BiPlayCircle className=\"iconStyle\" onClick={playRecorder} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controller\r\n","export default __webpack_public_path__ + \"static/media/future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","import { useState } from 'react';\r\n\r\nimport './style/LoopMachine.css';\r\nimport Beat from './Beat';\r\nimport Controller from './Controller';\r\n\r\n// audio\r\nimport futureFunk from '../audioFiles/future_funk_beats_25.mp3'\r\nimport stutterBreak from \"../audioFiles/120_stutter_breakbeats_16.mp3\";\r\nimport bassFunk from \"../audioFiles/Bass Warwick heavy funk groove on E 120 BPM.mp3\";\r\nimport electricGuitar from \"../audioFiles/electric guitar coutry slide 120bpm - B.mp3\";\r\nimport stompySlosh from \"../audioFiles/FUD_120_StompySlosh.mp3\";\r\nimport grooveTango from \"../audioFiles/GrooveB_120bpm_Tanggu.mp3\";\r\nimport mazePolitics from \"../audioFiles/MazePolitics_120_Perc.mp3\";\r\nimport pasGroove from \"../audioFiles/PAS3GROOVE1.03B.mp3\";\r\nimport silentStar from \"../audioFiles/SilentStar_120_Em_OrganSynth.mp3\";\r\n\r\n// icons\r\nimport { GiGuitar, GiGuitarBassHead, GiDrum, GiCompactDisc, GiTambourine, GiStarsStack, GiMazeSaw } from 'react-icons/gi';\r\nimport { FaHeartbeat } from 'react-icons/fa';\r\nimport { DiGroovy } from 'react-icons/di';\r\n\r\nconst beats = [\r\n    { audio: futureFunk, icon: <GiCompactDisc className=\"icon\" /> },\r\n    { audio: stutterBreak, icon: <FaHeartbeat className=\"icon\" /> },\r\n    { audio: bassFunk, icon: <GiGuitarBassHead className=\"icon\" /> },\r\n    { audio: electricGuitar, icon: <GiGuitar className=\"icon\" /> },\r\n    { audio: stompySlosh, icon: <GiDrum className=\"icon\" /> },\r\n    { audio: grooveTango, icon: <GiTambourine className=\"icon\" /> },\r\n    { audio: mazePolitics, icon: < GiMazeSaw className=\"icon\" /> },\r\n    { audio: pasGroove, icon: <DiGroovy className=\"icon\" /> },\r\n    { audio: silentStar, icon: <GiStarsStack className=\"icon\" /> },\r\n]\r\n\r\nfunction LoopMachine() {\r\n\r\n    const [recordObject, setRecordObject] = useState([])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loop-machine\">\r\n                {beats.map((beat, index) => <Beat beat={beat} key={index} index={index} recordObject={recordObject} />)}\r\n            </div>\r\n            <Controller setRecordObject={setRecordObject} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoopMachine","import './Header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\" >\r\n            Loop Machine\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\r\nimport LoopMachine from './components/LoopMachine';\r\nimport Header from './components/general/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <LoopMachine />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}