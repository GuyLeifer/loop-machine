{"version":3,"sources":["recoil/state.js","components/Beat.js","components/Controller.js","audioFiles/future_funk_beats_25.mp3","audioFiles/120_stutter_breakbeats_16.mp3","audioFiles/Bass Warwick heavy funk groove on E 120 BPM.mp3","audioFiles/electric guitar coutry slide 120bpm - B.mp3","audioFiles/FUD_120_StompySlosh.mp3","audioFiles/GrooveB_120bpm_Tanggu.mp3","audioFiles/MazePolitics_120_Perc.mp3","audioFiles/PAS3GROOVE1.03B.mp3","audioFiles/SilentStar_120_Em_OrganSynth.mp3","components/LoopMachine.js","components/general/About.js","components/general/Header.js","App.js","index.js"],"names":["loopStartState","atom","key","default","playAllState","playRecordState","recordState","recordObjectState","startTimeState","endTimeState","speedState","Beat","beat","index","recordObject","audio","icon","useState","beatState","setBeatState","beatStateCheck","setBeatStateCheck","useRecoilState","startTime","setStartTime","endTime","useRecoilValue","setRecordObject","useSetRecoilState","loopStart","playAll","record","speed","playRecord","setPlayRecord","audioRef","useRef","beatRef","useEffect","a","current","play","prev","time","Date","type","timeDelyed","Number","setTimeout","pause","currentTime","filter","forEach","clickBeatHandle","useCallback","playbackRate","style","boxShadow","backgroundColor","className","ref","onClick","src","loop","SliderSpeed","withStyles","root","color","thumb","valueLabel","background","fontWeight","active","track","height","rail","borderRadius","Slider","Controller","setSpeed","setPlayAll","setLoopStart","setEndTime","setSpeedState","setRecord","playRecorder","length","defaultValue","onChange","e","value","valueLabelDisplay","step","min","max","disabled","beats","futureFunk","stutterBreak","bassFunk","electricGuitar","stompySlosh","grooveTango","mazePolitics","pasGroove","silentStar","LoopMachine","map","About","isOpen","setIsOpen","console","log","overlayClassName","onRequestClose","Header","about","setAbout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c4bff7f.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nexport const loopStartState = atom({\r\n    key: 'loopStartState',\r\n    default: false,\r\n});\r\n\r\nexport const playAllState = atom({\r\n    key: 'playAllState',\r\n    default: false,\r\n});\r\n\r\nexport const playRecordState = atom({\r\n    key: 'playRecordState',\r\n    default: false,\r\n});\r\n\r\nexport const recordState = atom({\r\n    key: 'recordState',\r\n    default: false,\r\n});\r\n\r\nexport const recordObjectState = atom({\r\n    key: 'recordObjectState',\r\n    default: [],\r\n});\r\n\r\nexport const startTimeState = atom({\r\n    key: 'startTimeState',\r\n    default: null,\r\n});\r\n\r\nexport const endTimeState = atom({\r\n    key: 'endTimeState',\r\n    default: null,\r\n});\r\n\r\nexport const speedState = atom({\r\n    key: 'speedState',\r\n    default: 1,\r\n});","import { useRef, useState, useEffect, useCallback } from 'react';\r\n\r\n// recoil\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { startTimeState, endTimeState, playAllState, recordState, recordObjectState, loopStartState, playRecordState, speedState } from '../recoil/state';\r\n\r\n// style \r\nimport './style/Beat.css';\r\n\r\nfunction Beat({ beat, index, recordObject }) {\r\n\r\n    const { audio, icon } = beat;\r\n\r\n    const [beatState, setBeatState] = useState(false); // beat clicked state\r\n    const [beatStateCheck, setBeatStateCheck] = useState(false); // check if the beat still clicked until next loop\r\n\r\n    const [startTime, setStartTime] = useRecoilState(startTimeState); // record start time\r\n    const endTime = useRecoilValue(endTimeState); // record end time\r\n    const setRecordObject = useSetRecoilState(recordObjectState); // record \r\n\r\n    const loopStart = useRecoilValue(loopStartState); // loop mode\r\n    const playAll = useRecoilValue(playAllState); // play all mode\r\n    const record = useRecoilValue(recordState); // record mode\r\n    const speed = useRecoilValue(speedState); // speed playback rate\r\n    const [playRecord, setPlayRecord] = useRecoilState(playRecordState); // play record mode\r\n\r\n    const audioRef = useRef(null); // audio element\r\n    const beatRef = useRef(null); // beat element (styling purpose)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (loopStart || record || playRecord) {\r\n                if (beatState) {\r\n                    if (!startTime || startTime === 0) {\r\n                        audioRef.current.play();\r\n                        setStartTime(Number(new Date()));\r\n                        record && setRecordObject([{ time: 0, index: index, type: \"start\" }])\r\n                    } else if (speed === 0) { // play without waiting for next loop\r\n                        audioRef.current.play();\r\n                        record && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"check\" }])\r\n                    } else { // delay the beat until next loop start\r\n                        const timeDelyed = 8000 * (1 / speed) - ((Number(new Date()) - startTime) % 8000 * (1 / speed));\r\n                        setBeatStateCheck(\"on\")\r\n                        setTimeout(() => { // check the beat status\r\n                            setBeatStateCheck(true);\r\n                        }, timeDelyed);\r\n                        record && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"check\" }])\r\n                    }\r\n                } else {\r\n                    record && startTime && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"pause\" }])\r\n                    audioRef.current.pause();\r\n                }\r\n            } else { // restart\r\n                setStartTime(null);\r\n                setBeatState(false)\r\n                setBeatStateCheck(false)\r\n                audioRef.current.pause();\r\n                audioRef.current.currentTime = 0;\r\n            }\r\n        })()\r\n    }, [beatState, loopStart, record, playRecord])\r\n\r\n    useEffect(() => {\r\n        // check if beat button still clicked\r\n        if (beatStateCheck === true && beatState) {\r\n            audioRef.current.play();\r\n            record && setRecordObject(prev => [...prev, { time: new Date() - startTime, index: index, type: \"play\" }])\r\n        }\r\n    }, [beatStateCheck])\r\n\r\n    useEffect(() => {\r\n        if (playAll) {\r\n            audioRef.current.play()\r\n        } else if (playRecord) {\r\n            setStartTime(0);\r\n            setTimeout(() => {\r\n                setPlayRecord(false);\r\n            }, endTime);\r\n        } else if (!playRecord) {\r\n            setBeatState(false);\r\n            audioRef.current.pause();\r\n            audioRef.current.currentTime = 0;\r\n        }\r\n    }, [playAll, playRecord])\r\n\r\n\r\n    useEffect(() => {\r\n        if (startTime === 0) {\r\n            const recordToPlay = recordObject.filter(record => record.index === index); // filter only relevant records\r\n            recordToPlay.forEach((record) => { // automatically do the record action\r\n                if (record.index === index) {\r\n                    if (record.type === \"start\") {\r\n                        setBeatState(true)\r\n                    } else if (record.type === \"check\") {\r\n                        setTimeout(() => {\r\n                            setBeatState(true)\r\n                        }, record.time)\r\n                    } else if (record.type === \"pause\") {\r\n                        setTimeout(() => {\r\n                            setBeatState(false)\r\n                        }, record.time)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }, [startTime])\r\n\r\n    const clickBeatHandle = useCallback(() => {\r\n        if (!playAll && (loopStart || record)) {\r\n            setBeatState(prev => !prev)\r\n        }\r\n    }, [playAll, loopStart, record])\r\n\r\n    if (beatRef.current) { // styling purposes, and playback rate definition\r\n        speed !== 0 ? audioRef.current.playbackRate = speed : audioRef.current.playbackRate = 1 // if playback rate is 0 you can play without waiting for next loop\r\n        beatRef.current.style.boxShadow = beatStateCheck === \"on\" ? \"0 0 10px 10px #eff, 0 0 15px 15px yellow\" : ((beatState && (loopStart || record || playRecord)) || playAll) ? \"0 0 10px 10px #eff, 0 0 15px 15px green\" : \"0 0 10px 10px #eff, 0 0 12px 12px #0ff\"\r\n        beatRef.current.style.backgroundColor = ((beatState && (loopStart || record || playRecord)) || playAll) ? \"#777\" : \"#444\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"beat\" ref={beatRef}>\r\n            <div className=\"miniBeatStyle\" onClick={clickBeatHandle}>\r\n                <audio ref={audioRef} src={audio} loop={true} />\r\n                {icon}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beat","import { useState } from \"react\";\r\n\r\nimport { FaStopCircle, FaRecordVinyl } from \"react-icons/fa\";\r\nimport { BiPlayCircle, BiStopCircle } from \"react-icons/bi\";\r\nimport { TiThSmallOutline } from \"react-icons/ti\";\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\n\r\n// recoil\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from 'recoil';\r\nimport { playAllState, recordState, recordObjectState, loopStartState, playRecordState, startTimeState, endTimeState, speedState } from '../recoil/state';\r\n\r\n// style \r\nimport './style/Controller.css';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst SliderSpeed = withStyles({\r\n    root: {\r\n        color: \"white\",\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"white\",\r\n        color: \"white\",\r\n    },\r\n    valueLabel: {\r\n        '& *': {\r\n            background: 'white',\r\n            color: '#000',\r\n            fontWeight: 'bold'\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 5,\r\n    },\r\n    rail: {\r\n        height: 5,\r\n        borderRadius: 4\r\n    }\r\n})(Slider);\r\n\r\nfunction Controller({ setRecordObject }) {\r\n\r\n    const [speed, setSpeed] = useState(1);\r\n\r\n    const [playAll, setPlayAll] = useRecoilState(playAllState);\r\n    const [loopStart, setLoopStart] = useRecoilState(loopStartState);\r\n    const startTime = useRecoilValue(startTimeState);\r\n    const setEndTime = useSetRecoilState(endTimeState);\r\n    const setSpeedState = useSetRecoilState(speedState);\r\n    const [playRecord, setPlayRecord] = useRecoilState(playRecordState);\r\n    const [record, setRecord] = useRecoilState(recordState);\r\n    const recordObject = useRecoilValue(recordObjectState);\r\n\r\n    const loopStarter = () => {\r\n        setSpeedState(speed);\r\n        !record && !playAll && !playRecord && setLoopStart(prev => !prev)\r\n    }\r\n\r\n    const playAller = () => {\r\n        setSpeedState(speed);\r\n        !loopStart && !record && !playRecord && setPlayAll(prev => !prev)\r\n    }\r\n\r\n    const recorder = () => {\r\n        setSpeedState(speed);\r\n        !loopStart && !playAll && !playRecord && setRecord(prev => !prev);\r\n        record && setEndTime(new Date() - startTime);\r\n    }\r\n\r\n    const playRecorder = () => {\r\n        setSpeedState(speed);\r\n        setRecordObject(recordObject);\r\n        !loopStart && !playAll && !record && setPlayRecord(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <div className=\"controllerStyle\">\r\n            <div className=\"icons\">\r\n                <div className={(!playAll && !record && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={loopStarter}>\r\n                    {!loopStart && <FaPowerOff className=\"iconStyle\" />}\r\n                    {(loopStart && !playAll && !record) && <FaStopCircle className=\"iconStyle\" />}\r\n                </div>\r\n                <div className={(!loopStart && !record && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={playAller}>\r\n                    {!playAll && <TiThSmallOutline className=\"iconStyle\" />}\r\n                    {(playAll && !loopStart && !record) && <FaStopCircle className=\"iconStyle\" />}\r\n                </div>\r\n                <div className={record ? \"iconsDivRecordStyle\" : (!loopStart && !playAll && !playRecord) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"} onClick={recorder}>\r\n                    <FaRecordVinyl className=\"iconStyle\" />\r\n                </div>\r\n                <div className={(!playAll && !loopStart && !record && recordObject.length > 0) ? \"iconsDivStyle\" : \"iconsDivDisabledStyle\"}>\r\n                    {playRecord ? <BiStopCircle className=\"iconStyle\" onClick={playRecorder} /> : <BiPlayCircle className=\"iconStyle\" onClick={playRecorder} />}\r\n                </div>\r\n            </div>\r\n            <SliderSpeed\r\n                className=\"slider\"\r\n                defaultValue={1}\r\n                onChange={(e, value) => setSpeed(value)}\r\n                valueLabelDisplay=\"auto\"\r\n                step={0.25}\r\n                min={0}\r\n                max={2}\r\n                disabled={loopStart || playAll || record || playRecord ? true : false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controller\r\n","export default __webpack_public_path__ + \"static/media/future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","import { useState } from 'react';\r\n\r\nimport './style/LoopMachine.css';\r\nimport Beat from './Beat';\r\nimport Controller from './Controller';\r\n\r\n// audio\r\nimport futureFunk from '../audioFiles/future_funk_beats_25.mp3'\r\nimport stutterBreak from \"../audioFiles/120_stutter_breakbeats_16.mp3\";\r\nimport bassFunk from \"../audioFiles/Bass Warwick heavy funk groove on E 120 BPM.mp3\";\r\nimport electricGuitar from \"../audioFiles/electric guitar coutry slide 120bpm - B.mp3\";\r\nimport stompySlosh from \"../audioFiles/FUD_120_StompySlosh.mp3\";\r\nimport grooveTango from \"../audioFiles/GrooveB_120bpm_Tanggu.mp3\";\r\nimport mazePolitics from \"../audioFiles/MazePolitics_120_Perc.mp3\";\r\nimport pasGroove from \"../audioFiles/PAS3GROOVE1.03B.mp3\";\r\nimport silentStar from \"../audioFiles/SilentStar_120_Em_OrganSynth.mp3\";\r\n\r\n// icons\r\nimport { GiGuitar, GiGuitarBassHead, GiDrum, GiCompactDisc, GiTambourine, GiStarsStack, GiMazeSaw } from 'react-icons/gi';\r\nimport { FaHeartbeat } from 'react-icons/fa';\r\nimport { DiGroovy } from 'react-icons/di';\r\n\r\nconst beats = [\r\n    { audio: futureFunk, icon: <GiCompactDisc className=\"icon\" /> },\r\n    { audio: stutterBreak, icon: <FaHeartbeat className=\"icon\" /> },\r\n    { audio: bassFunk, icon: <GiGuitarBassHead className=\"icon\" /> },\r\n    { audio: electricGuitar, icon: <GiGuitar className=\"icon\" /> },\r\n    { audio: stompySlosh, icon: <GiDrum className=\"icon\" /> },\r\n    { audio: grooveTango, icon: <GiTambourine className=\"icon\" /> },\r\n    { audio: mazePolitics, icon: < GiMazeSaw className=\"icon\" /> },\r\n    { audio: pasGroove, icon: <DiGroovy className=\"icon\" /> },\r\n    { audio: silentStar, icon: <GiStarsStack className=\"icon\" /> },\r\n]\r\n\r\nfunction LoopMachine() {\r\n\r\n    const [recordObject, setRecordObject] = useState([])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loop-machine\">\r\n                {beats.map((beat, index) => <Beat beat={beat} key={index} index={index} recordObject={recordObject} />)}\r\n            </div>\r\n            <Controller setRecordObject={setRecordObject} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoopMachine","import React from 'react';\r\nimport './About.css';\r\nimport Modal from 'react-modal';\r\n\r\nimport { FaStopCircle, FaRecordVinyl } from \"react-icons/fa\";\r\nimport { BiPlayCircle, BiStopCircle } from \"react-icons/bi\";\r\nimport { TiThSmallOutline } from \"react-icons/ti\";\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\n\r\nfunction About({ isOpen, setIsOpen }) {\r\n    console.log(isOpen)\r\n    return (\r\n        <Modal\r\n            className=\"content\"\r\n            overlayClassName=\"overlay\"\r\n            isOpen={isOpen}\r\n            onRequestClose={() => setIsOpen(false)}\r\n        >\r\n            <h2>About</h2>\r\n            <div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><FaPowerOff /></div>\r\n                    <div className=\"text\">Loop Start</div>\r\n                </div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><TiThSmallOutline /></div>\r\n                    <div className=\"text\">Play All</div>\r\n                </div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><FaRecordVinyl /></div>\r\n                    <div className=\"text\">Record</div>\r\n                </div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><BiStopCircle /></div>\r\n                    <div className=\"text\">Stop</div>\r\n                </div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><BiPlayCircle /></div>\r\n                    <div className=\"text\">Play Record</div>\r\n                </div>\r\n                <div className=\"infoIcon\">\r\n                    <div className=\"icon-about\"><FaStopCircle /></div>\r\n                    <div className=\"text\">Stop Record</div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState } from \"react\";\r\nimport './Header.css';\r\nimport About from './About';\r\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\r\n\r\nfunction Header() {\r\n\r\n    const [about, setAbout] = useState(false);\r\n\r\n    return (\r\n        <div className=\"header\" >\r\n            <span>Loop Machine</span>\r\n            <div className=\"about\">\r\n                <AiOutlineInfoCircle onClick={() => setAbout(prev => !prev)} />\r\n            </div>\r\n            {about && <About isOpen={about} setIsOpen={setAbout} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\r\nimport LoopMachine from './components/LoopMachine';\r\nimport Header from './components/general/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <LoopMachine />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}